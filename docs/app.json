[{"name":"app.R","content":"library(shiny)\r\nlibrary(bslib)\r\n\r\nui <- fluidPage(\r\n  theme = bslib::bs_theme(bootswatch = \"lumen\"),\r\n  titlePanel(\r\n    h1(\"Loot Box Opening Simulation\", align = \"center\")\r\n  ),\r\n  div(\r\n    fluidRow(\r\n      column(10,\r\n             align=\"left\",\r\n             span(\"A common loot box scheme in games involves obtaining a collection of collectibles to earn the final reward. To acquire these collectibles, players must open cases that drop one collectible at a time, with the possibility of receiving duplicates. An exchange system is often available, allowing players to trade duplicate collectibles for new ones at a specified rate. The question then arises: what is the probability of obtaining the final reward after opening a certain number of boxes?\")\r\n      ),\r\n      column(2,\r\n             align=\"center\",\r\n             HTML(\"<span>Created by <br><a href='https://zehuiyin.github.io/' target='_blank'>Zehui Yin<\/a><\/span>\")\r\n      ),\r\n      style = 'border-bottom: 1px solid'\r\n    ),\r\n    fluidRow(\r\n      column(12,\r\n             align=\"center\",\r\n             HTML(\"&nbsp;\"))\r\n    ),\r\n    fluidRow(\r\n      column(4,\r\n             align=\"center\",\r\n             numericInput(\"collect\", \r\n                          \"How Many Collectibles Are There In The Collection\", \r\n                          min = 1, \r\n                          step = 1, \r\n                          value = 60)\r\n      ),\r\n      column(4,\r\n             align=\"center\",\r\n             numericInput(\"box_opened\", \r\n                          HTML(\"Total Number of Cases Opened <br> &nbsp;\"), \r\n                          min = 1, \r\n                          step = 1,\r\n                          value = 80)\r\n      ),\r\n      column(4,\r\n             align=\"center\",\r\n             numericInput(\"exrate\", \r\n                          \"How Many Duplicates Required to Trade A New One\", \r\n                          min = 1, \r\n                          step = 1,\r\n                          value = 2)\r\n      ),\r\n      style = 'border-bottom: 1px solid'\r\n    ),\r\n    fluidRow(\r\n      column(12,\r\n             align=\"center\",\r\n             HTML(\"&nbsp;\"))\r\n    ),\r\n    fluidRow(\r\n      column(12,\r\n             align=\"center\",\r\n             span(\"The optimal strategy is to refrain from exchanging any duplicates until you have accumulated enough to complete the entire collection.\")\r\n      ),\r\n    ),\r\n    fluidRow(\r\n      column(12,\r\n             align=\"center\",\r\n             htmlOutput(\"prob\")\r\n      )\r\n    ), style = \"max-width: 1200px; margin: auto;\")\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  output$prob <- renderText({\r\n    req(input$collect)\r\n    req(input$box_opened)\r\n    req(input$exrate)\r\n    \r\n    sims <- replicate(1000, {\r\n      s <- sample(1:input$collect, \r\n                  size = input$box_opened,\r\n                  replace = TRUE)\r\n      s_no_dup <- unique(s)\r\n      \r\n      dup <- length(s) - length(s_no_dup)\r\n      uniq <- length(s_no_dup)\r\n      \r\n      dup >= (input$collect - uniq) * input$exrate\r\n    }, simplify = TRUE)\r\n    \r\n    res <- sum(sims)/length(sims)*100\r\n    \r\n    paste0(\"<span style='font-size:1.2em'>Based on a simulation of 1,000 runs, the probability of obtaining the final reward is <b>\", \r\n           res, \"%<\/b>.<\/span>\")\r\n  })\r\n}\r\n\r\nshinyApp(ui, server)\r\n","type":"text"}]
